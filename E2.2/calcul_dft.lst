


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 area             moncode2, code, readwrite
    3 00000000                 import           TabSig
    4 00000000                 import           TabCos
    5 00000000                 import           TabSin
    6 00000000                 export           dft
    7 00000000                 export           dft_im
    8 00000000                 export           dft_re
    9 00000000         
   10 00000000         
   11 00000000         dft     proc
   12 00000000 B500            push             {lr}
   13 00000002 B401            push             {r0}
   14 00000004 B402            push             {r1}
   15 00000006 F7FF FFFE       bl               dft_im
   16 0000000A 681A            ldr              r2,[r3]     ; on récup la valeu
                                                            r de im(k)
   17 0000000C FB02 F202       mul              r2,r2       ; calcul de Im(k)^2
                                                            
   18 00000010 BC02            pop              {r1}
   19 00000012 BC01            pop              {r0}
   20 00000014 B404            push             {r2}
   21 00000016 F7FF FFFE       bl               dft_re
   22 0000001A 681A            ldr              r2,[r3]     ; on récup la valeu
                                                            r de re(k)
   23 0000001C FB02 F202       mul              r2,r2       ; calcul de Re(k) ^
                                                            2
   24 00000020 BC02            pop              {r1}        ; on recup la valeu
                                                            r de im(k)^2 sauveg
                                                            ardé
   25 00000022 4411            add              r1,r2
   26 00000024         ;lsr r1, #16
   27 00000024 6019            str              r1, [r3]    ; on la val finale 
                                                            de la dft
   28 00000026 BD00            pop              {pc}
   29 00000028                 endp
   30 00000028         
   31 00000028         dft_im  proc
   32 00000028 B402            push             {r1}
   33 0000002A F04F 0300       mov              r3, #0      ; début compteur po
                                                            ur la boucle
   34 0000002E         start_im
   35 0000002E 2B3F            cmp              r3, #63
   36 00000030 D100            bne              loop_im
   37 00000032 E01D            b                out_im      ; quite la boucle
   38 00000034         loop_im
   39 00000034         ;  dans la boucle
   40 00000034 FB03 F200       mul              r2, r3 , r0 ; indice i*k
   41 00000038         ; calcul modulo pour rester dans [0, N-1]
   42 00000038 F002 023F       and              r2, r2, #0x003F ; 63 = 0x003F
   43 0000003C         ; on récupere le cos
   44 0000003C F04F 0102       mov              r1, #2
   45 00000040 FB02 F201       mul              r2, r1
   46 00000044 F8DF C078       ldr              r12, =TabSin
   47 00000048 F83C 2002       ldrh             r2, [r12,r2] ; on recup le cos(
                                                            k*i*2pi/N) dans r2
   48 0000004C         ; on recupère x(i) 
   49 0000004C FB01 F103       mul              r1, r3
   50 00000050 F8DF C070       ldr              r12, =TabSig



ARM Macro Assembler    Page 2 


   51 00000054 F83C 1001       ldrh             r1, [r12, r1] ; on recup le x(i
                                                            ) dans r1
   52 00000058         ; conversion r1 r2 en entier pour le calcul
   53 00000058 FB01 F102       mul              r1, r2      ; calcul a l'instan
                                                            t i
   54 0000005C BC04            pop              {r2}        ; adresse de dft_re
                                                            s 
   55 0000005E F8D2 C000       ldr              r12, [r2]   ; valeur de dft_res
                                                              a l'iteration pre
                                                            cendete
   56 00000062 448C            add              r12, r1     ; on ajoute a la so
                                                            mme
   57 00000064 F8C2 C000       str              r12, [r2]   ; on sazuvegarde la
                                                             nouvelle valeur de
                                                             dft_res 
   58 00000068 B404            push             {r2}
   59 0000006A F103 0301       add              r3, #1      ; on incrémente la 
                                                            boucle
   60 0000006E E7DE            b                start_im
   61 00000070         out_im
   62 00000070 BC08            pop              {r3}
   63 00000072 4770            bx               lr
   64 00000074                 endp
   65 00000074         
   66 00000074         
   67 00000074         dft_re  proc
   68 00000074 B402            push             {r1}
   69 00000076 F04F 0300       mov              r3, #0      ; début compteur po
                                                            ur la boucle
   70 0000007A         start_re
   71 0000007A 2B3F            cmp              r3, #63
   72 0000007C D100            bne              loop_re
   73 0000007E E01D            b                out_re      ; quite la boucle
   74 00000080         loop_re
   75 00000080         ;  dans la boucle
   76 00000080 FB03 F200       mul              r2, r3 , r0 ; indice i*k
   77 00000084         ; calcul modulo pour rester dans [0, N-1]
   78 00000084 F002 023F       and              r2, r2, #0x003F ; 63 = 0x003F
   79 00000088         ; on récupere le cos
   80 00000088 F04F 0102       mov              r1, #2
   81 0000008C FB02 F201       mul              r2, r1
   82 00000090 F8DF C034       ldr              r12, =TabCos
   83 00000094 F83C 2002       ldrh             r2, [r12,r2] ; on recup le cos(
                                                            k*i*2pi/N) dans r2
   84 00000098         ; on recupère x(i) 
   85 00000098 FB01 F103       mul              r1, r3
   86 0000009C F8DF C024       ldr              r12, =TabSig
   87 000000A0 F83C 1001       ldrh             r1, [r12, r1] ; on recup le x(i
                                                            ) dans r1
   88 000000A4         ; conversion r1 r2 en entier pour le calcul
   89 000000A4 FB01 F102       mul              r1, r2      ; calcul a l'instan
                                                            t i
   90 000000A8 BC04            pop              {r2}        ; adresse de dft_re
                                                            s 
   91 000000AA F8D2 C000       ldr              r12, [r2]   ; valeur de dft_res
                                                              a l'iteration pre
                                                            cendete
   92 000000AE 448C            add              r12, r1     ; on ajoute a la so
                                                            mme



ARM Macro Assembler    Page 3 


   93 000000B0 F8C2 C000       str              r12, [r2]   ; on sazuvegarde la
                                                             nouvelle valeur de
                                                             dft_res 
   94 000000B4 B404            push             {r2}
   95 000000B6 F103 0301       add              r3, #1      ; on incrémente la 
                                                            boucle
   96 000000BA E7DE            b                start_re
   97 000000BC         out_re
   98 000000BC BC08            pop              {r3}        ; on sort de la sta
                                                            ck la valeur de dft
                                                            _res dans r3
   99 000000BE 4770            bx               lr
  100 000000C0                 endp
  101 000000C0         
  102 000000C0         
  103 000000C0                 end
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\calcul_dft.d -o.\obj\calcul_dft.o -I.\RTE\_Simu -IC:\Users\t
itip\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\titi
p\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="
__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=ca
lcul_dft.lst calcul_dft.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

dft 00000000

Symbol: dft
   Definitions
      At line 11 in file calcul_dft.s
   Uses
      At line 6 in file calcul_dft.s
Comment: dft used once
dft_im 00000028

Symbol: dft_im
   Definitions
      At line 31 in file calcul_dft.s
   Uses
      At line 7 in file calcul_dft.s
      At line 15 in file calcul_dft.s

dft_re 00000074

Symbol: dft_re
   Definitions
      At line 67 in file calcul_dft.s
   Uses
      At line 8 in file calcul_dft.s
      At line 21 in file calcul_dft.s

loop_im 00000034

Symbol: loop_im
   Definitions
      At line 38 in file calcul_dft.s
   Uses
      At line 36 in file calcul_dft.s
Comment: loop_im used once
loop_re 00000080

Symbol: loop_re
   Definitions
      At line 74 in file calcul_dft.s
   Uses
      At line 72 in file calcul_dft.s
Comment: loop_re used once
moncode2 00000000

Symbol: moncode2
   Definitions
      At line 2 in file calcul_dft.s
   Uses
      None
Comment: moncode2 unused
out_im 00000070

Symbol: out_im
   Definitions
      At line 61 in file calcul_dft.s
   Uses
      At line 37 in file calcul_dft.s
Comment: out_im used once
out_re 000000BC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: out_re
   Definitions
      At line 97 in file calcul_dft.s
   Uses
      At line 73 in file calcul_dft.s
Comment: out_re used once
start_im 0000002E

Symbol: start_im
   Definitions
      At line 34 in file calcul_dft.s
   Uses
      At line 60 in file calcul_dft.s
Comment: start_im used once
start_re 0000007A

Symbol: start_re
   Definitions
      At line 70 in file calcul_dft.s
   Uses
      At line 96 in file calcul_dft.s
Comment: start_re used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TabCos 00000000

Symbol: TabCos
   Definitions
      At line 4 in file calcul_dft.s
   Uses
      At line 82 in file calcul_dft.s
Comment: TabCos used once
TabSig 00000000

Symbol: TabSig
   Definitions
      At line 3 in file calcul_dft.s
   Uses
      At line 50 in file calcul_dft.s
      At line 86 in file calcul_dft.s

TabSin 00000000

Symbol: TabSin
   Definitions
      At line 5 in file calcul_dft.s
   Uses
      At line 46 in file calcul_dft.s
Comment: TabSin used once
3 symbols
350 symbols in table
